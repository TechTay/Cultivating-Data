{"ast":null,"code":"/*!\n  * Bootstrap event-handler.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../util/index.js')) : typeof define === 'function' && define.amd ? define(['../util/index'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.EventHandler = factory(global.Index));\n})(this, function (index_js) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  const namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n  const stripNameRegex = /\\..*/;\n  const stripUidRegex = /::\\d+$/;\n  const eventRegistry = {}; // Events storage\n\n  let uidEvent = 1;\n  const customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n  };\n  const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n  /**\n   * Private methods\n   */\n\n  function makeEventUid(element, uid) {\n    return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n  }\n\n  function getElementEvents(element) {\n    const uid = makeEventUid(element);\n    element.uidEvent = uid;\n    eventRegistry[uid] = eventRegistry[uid] || {};\n    return eventRegistry[uid];\n  }\n\n  function bootstrapHandler(element, fn) {\n    return function handler(event) {\n      hydrateObj(event, {\n        delegateTarget: element\n      });\n\n      if (handler.oneOff) {\n        EventHandler.off(element, event.type, fn);\n      }\n\n      return fn.apply(element, [event]);\n    };\n  }\n\n  function bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n      const domElements = element.querySelectorAll(selector);\n\n      for (let {\n        target\n      } = event; target && target !== this; target = target.parentNode) {\n        for (const domElement of domElements) {\n          if (domElement !== target) {\n            continue;\n          }\n\n          hydrateObj(event, {\n            delegateTarget: target\n          });\n\n          if (handler.oneOff) {\n            EventHandler.off(element, event.type, selector, fn);\n          }\n\n          return fn.apply(target, [event]);\n        }\n      }\n    };\n  }\n\n  function findHandler(events, callable) {\n    let delegationSelector = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    return Object.values(events).find(event => event.callable === callable && event.delegationSelector === delegationSelector);\n  }\n\n  function normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n    const isDelegated = typeof handler === 'string'; // TODO: tooltip passes `false` instead of selector, so we need to check\n\n    const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n    let typeEvent = getTypeEvent(originalTypeEvent);\n\n    if (!nativeEvents.has(typeEvent)) {\n      typeEvent = originalTypeEvent;\n    }\n\n    return [isDelegated, callable, typeEvent];\n  }\n\n  function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n\n    let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction); // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n    // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n\n    if (originalTypeEvent in customEvents) {\n      const wrapFunction = fn => {\n        return function (event) {\n          if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n            return fn.call(this, event);\n          }\n        };\n      };\n\n      callable = wrapFunction(callable);\n    }\n\n    const events = getElementEvents(element);\n    const handlers = events[typeEvent] || (events[typeEvent] = {});\n    const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n\n    if (previousFunction) {\n      previousFunction.oneOff = previousFunction.oneOff && oneOff;\n      return;\n    }\n\n    const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n    const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n    fn.delegationSelector = isDelegated ? handler : null;\n    fn.callable = callable;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, isDelegated);\n  }\n\n  function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    const fn = findHandler(events[typeEvent], handler, delegationSelector);\n\n    if (!fn) {\n      return;\n    }\n\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n  }\n\n  function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    const storeElementEvent = events[typeEvent] || {};\n\n    for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n      if (handlerKey.includes(namespace)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n      }\n    }\n  }\n\n  function getTypeEvent(event) {\n    // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n    event = event.replace(stripNameRegex, '');\n    return customEvents[event] || event;\n  }\n\n  const EventHandler = {\n    on(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, false);\n    },\n\n    one(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, true);\n    },\n\n    off(element, originalTypeEvent, handler, delegationFunction) {\n      if (typeof originalTypeEvent !== 'string' || !element) {\n        return;\n      }\n\n      const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n      const inNamespace = typeEvent !== originalTypeEvent;\n      const events = getElementEvents(element);\n      const storeElementEvent = events[typeEvent] || {};\n      const isNamespace = originalTypeEvent.startsWith('.');\n\n      if (typeof callable !== 'undefined') {\n        // Simplest case: handler is passed, remove that listener ONLY.\n        if (!Object.keys(storeElementEvent).length) {\n          return;\n        }\n\n        removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n        return;\n      }\n\n      if (isNamespace) {\n        for (const elementEvent of Object.keys(events)) {\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        }\n      }\n\n      for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n        const handlerKey = keyHandlers.replace(stripUidRegex, '');\n\n        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n          removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n        }\n      }\n    },\n\n    trigger(element, event, args) {\n      if (typeof event !== 'string' || !element) {\n        return null;\n      }\n\n      const $ = index_js.getjQuery();\n      const typeEvent = getTypeEvent(event);\n      const inNamespace = event !== typeEvent;\n      let jQueryEvent = null;\n      let bubbles = true;\n      let nativeDispatch = true;\n      let defaultPrevented = false;\n\n      if (inNamespace && $) {\n        jQueryEvent = $.Event(event, args);\n        $(element).trigger(jQueryEvent);\n        bubbles = !jQueryEvent.isPropagationStopped();\n        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n        defaultPrevented = jQueryEvent.isDefaultPrevented();\n      }\n\n      const evt = hydrateObj(new Event(event, {\n        bubbles,\n        cancelable: true\n      }), args);\n\n      if (defaultPrevented) {\n        evt.preventDefault();\n      }\n\n      if (nativeDispatch) {\n        element.dispatchEvent(evt);\n      }\n\n      if (evt.defaultPrevented && jQueryEvent) {\n        jQueryEvent.preventDefault();\n      }\n\n      return evt;\n    }\n\n  };\n\n  function hydrateObj(obj) {\n    let meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    for (const [key, value] of Object.entries(meta)) {\n      try {\n        obj[key] = value;\n      } catch (_unused) {\n        Object.defineProperty(obj, key, {\n          configurable: true,\n\n          get() {\n            return value;\n          }\n\n        });\n      }\n    }\n\n    return obj;\n  }\n\n  return EventHandler;\n});","map":{"version":3,"mappings":"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","names":["global","factory","exports","module","require","define","amd","globalThis","self","EventHandler","Index","index_js","namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","uidEvent","customEvents","mouseenter","mouseleave","nativeEvents","Set","makeEventUid","element","uid","getElementEvents","bootstrapHandler","fn","handler","event","hydrateObj","delegateTarget","oneOff","off","type","apply","bootstrapDelegationHandler","selector","domElements","querySelectorAll","target","parentNode","domElement","findHandler","events","callable","delegationSelector","Object","values","find","normalizeParameters","originalTypeEvent","delegationFunction","isDelegated","typeEvent","getTypeEvent","has","addHandler","wrapFunction","relatedTarget","contains","call","handlers","previousFunction","replace","addEventListener","removeHandler","removeEventListener","Boolean","removeNamespacedHandlers","namespace","storeElementEvent","handlerKey","entries","includes","on","one","inNamespace","isNamespace","startsWith","keys","length","elementEvent","slice","keyHandlers","trigger","args","$","getjQuery","jQueryEvent","bubbles","nativeDispatch","defaultPrevented","Event","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","evt","cancelable","preventDefault","dispatchEvent","obj","meta","key","value","_unused","defineProperty","configurable","get"],"sources":["C:/Users/Devan/OneDrive/Desktop/Cultivating Data/frontend/node_modules/bootstrap/js/dist/dom/event-handler.js"],"sourcesContent":["/*!\n  * Bootstrap event-handler.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('../util/index.js')) :\n  typeof define === 'function' && define.amd ? define(['../util/index'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.EventHandler = factory(global.Index));\n})(this, (function (index_js) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap dom/event-handler.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  /**\n   * Constants\n   */\n\n  const namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\n  const stripNameRegex = /\\..*/;\n  const stripUidRegex = /::\\d+$/;\n  const eventRegistry = {}; // Events storage\n  let uidEvent = 1;\n  const customEvents = {\n    mouseenter: 'mouseover',\n    mouseleave: 'mouseout'\n  };\n  const nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n\n  /**\n   * Private methods\n   */\n\n  function makeEventUid(element, uid) {\n    return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n  }\n  function getElementEvents(element) {\n    const uid = makeEventUid(element);\n    element.uidEvent = uid;\n    eventRegistry[uid] = eventRegistry[uid] || {};\n    return eventRegistry[uid];\n  }\n  function bootstrapHandler(element, fn) {\n    return function handler(event) {\n      hydrateObj(event, {\n        delegateTarget: element\n      });\n      if (handler.oneOff) {\n        EventHandler.off(element, event.type, fn);\n      }\n      return fn.apply(element, [event]);\n    };\n  }\n  function bootstrapDelegationHandler(element, selector, fn) {\n    return function handler(event) {\n      const domElements = element.querySelectorAll(selector);\n      for (let {\n        target\n      } = event; target && target !== this; target = target.parentNode) {\n        for (const domElement of domElements) {\n          if (domElement !== target) {\n            continue;\n          }\n          hydrateObj(event, {\n            delegateTarget: target\n          });\n          if (handler.oneOff) {\n            EventHandler.off(element, event.type, selector, fn);\n          }\n          return fn.apply(target, [event]);\n        }\n      }\n    };\n  }\n  function findHandler(events, callable, delegationSelector = null) {\n    return Object.values(events).find(event => event.callable === callable && event.delegationSelector === delegationSelector);\n  }\n  function normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n    const isDelegated = typeof handler === 'string';\n    // TODO: tooltip passes `false` instead of selector, so we need to check\n    const callable = isDelegated ? delegationFunction : handler || delegationFunction;\n    let typeEvent = getTypeEvent(originalTypeEvent);\n    if (!nativeEvents.has(typeEvent)) {\n      typeEvent = originalTypeEvent;\n    }\n    return [isDelegated, callable, typeEvent];\n  }\n  function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n    let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n\n    // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n    // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n    if (originalTypeEvent in customEvents) {\n      const wrapFunction = fn => {\n        return function (event) {\n          if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n            return fn.call(this, event);\n          }\n        };\n      };\n      callable = wrapFunction(callable);\n    }\n    const events = getElementEvents(element);\n    const handlers = events[typeEvent] || (events[typeEvent] = {});\n    const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null);\n    if (previousFunction) {\n      previousFunction.oneOff = previousFunction.oneOff && oneOff;\n      return;\n    }\n    const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''));\n    const fn = isDelegated ? bootstrapDelegationHandler(element, handler, callable) : bootstrapHandler(element, callable);\n    fn.delegationSelector = isDelegated ? handler : null;\n    fn.callable = callable;\n    fn.oneOff = oneOff;\n    fn.uidEvent = uid;\n    handlers[uid] = fn;\n    element.addEventListener(typeEvent, fn, isDelegated);\n  }\n  function removeHandler(element, events, typeEvent, handler, delegationSelector) {\n    const fn = findHandler(events[typeEvent], handler, delegationSelector);\n    if (!fn) {\n      return;\n    }\n    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n    delete events[typeEvent][fn.uidEvent];\n  }\n  function removeNamespacedHandlers(element, events, typeEvent, namespace) {\n    const storeElementEvent = events[typeEvent] || {};\n    for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n      if (handlerKey.includes(namespace)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n      }\n    }\n  }\n  function getTypeEvent(event) {\n    // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n    event = event.replace(stripNameRegex, '');\n    return customEvents[event] || event;\n  }\n  const EventHandler = {\n    on(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, false);\n    },\n    one(element, event, handler, delegationFunction) {\n      addHandler(element, event, handler, delegationFunction, true);\n    },\n    off(element, originalTypeEvent, handler, delegationFunction) {\n      if (typeof originalTypeEvent !== 'string' || !element) {\n        return;\n      }\n      const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction);\n      const inNamespace = typeEvent !== originalTypeEvent;\n      const events = getElementEvents(element);\n      const storeElementEvent = events[typeEvent] || {};\n      const isNamespace = originalTypeEvent.startsWith('.');\n      if (typeof callable !== 'undefined') {\n        // Simplest case: handler is passed, remove that listener ONLY.\n        if (!Object.keys(storeElementEvent).length) {\n          return;\n        }\n        removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null);\n        return;\n      }\n      if (isNamespace) {\n        for (const elementEvent of Object.keys(events)) {\n          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n        }\n      }\n      for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n        const handlerKey = keyHandlers.replace(stripUidRegex, '');\n        if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n          removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);\n        }\n      }\n    },\n    trigger(element, event, args) {\n      if (typeof event !== 'string' || !element) {\n        return null;\n      }\n      const $ = index_js.getjQuery();\n      const typeEvent = getTypeEvent(event);\n      const inNamespace = event !== typeEvent;\n      let jQueryEvent = null;\n      let bubbles = true;\n      let nativeDispatch = true;\n      let defaultPrevented = false;\n      if (inNamespace && $) {\n        jQueryEvent = $.Event(event, args);\n        $(element).trigger(jQueryEvent);\n        bubbles = !jQueryEvent.isPropagationStopped();\n        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n        defaultPrevented = jQueryEvent.isDefaultPrevented();\n      }\n      const evt = hydrateObj(new Event(event, {\n        bubbles,\n        cancelable: true\n      }), args);\n      if (defaultPrevented) {\n        evt.preventDefault();\n      }\n      if (nativeDispatch) {\n        element.dispatchEvent(evt);\n      }\n      if (evt.defaultPrevented && jQueryEvent) {\n        jQueryEvent.preventDefault();\n      }\n      return evt;\n    }\n  };\n  function hydrateObj(obj, meta = {}) {\n    for (const [key, value] of Object.entries(meta)) {\n      try {\n        obj[key] = value;\n      } catch (_unused) {\n        Object.defineProperty(obj, key, {\n          configurable: true,\n          get() {\n            return value;\n          }\n        });\n      }\n    }\n    return obj;\n  }\n\n  return EventHandler;\n\n}));\n"]},"metadata":{},"sourceType":"script"}