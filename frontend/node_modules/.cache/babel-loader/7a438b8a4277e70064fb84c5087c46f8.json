{"ast":null,"code":"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nconst Dashboard = {\n  articlesList: []\n};\n\nconst dashview = async () => {\n  let response = await fetch('https://gnews.io/api/v4/search?q=example&apikey=72357f2dc9e0efd0a5ed92fe81487f60');\n};\n\nconst articles = fetch(\"https://gnews.io/api/v4/search?q=example&apikey=72357f2dc9e0efd0a5ed92fe81487f60\").then(response => {\n  return response.json();\n}).then(data => {\n  data.forEach(article => {});\n});","map":{"version":3,"sources":["C:/Users/Devan/OneDrive/Desktop/Project_Data_Website/frontend/src/components/NavBar/DashboardAPI.js"],"names":["React","useEffect","useState","useAuth","Link","axios","Dashboard","articlesList","dashview","response","fetch","articles","then","json","data","forEach","article"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,YAAY,EAAE;AADA,CAAlB;;AAIA,MAAMC,QAAQ,GAAG,YAAY;AACrB,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kFAAD,CAA1B;AACP,CAFD;;AAIA,MAAMC,QAAQ,GAAGD,KAAK,CAAC,kFAAD,CAAL,CACZE,IADY,CACPH,QAAQ,IAAI;AACd,SAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,CAHY,EAIZD,IAJY,CAIPE,IAAI,IAAI;AACVA,EAAAA,IAAI,CAACC,OAAL,CAAaC,OAAO,IAAI,CAAE,CAA1B;AACH,CANY,CAAjB","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Dashboard = {\r\n    articlesList: []\r\n}\r\n\r\nconst dashview = async () => {\r\n        let response = await fetch('https://gnews.io/api/v4/search?q=example&apikey=72357f2dc9e0efd0a5ed92fe81487f60')\r\n}\r\n\r\nconst articles = fetch(\"https://gnews.io/api/v4/search?q=example&apikey=72357f2dc9e0efd0a5ed92fe81487f60\")\r\n    .then(response => {\r\n        return response.json();\r\n    })\r\n    .then(data => {\r\n        data.forEach(article => {})\r\n    })\r\n\r\n  "]},"metadata":{},"sourceType":"module"}