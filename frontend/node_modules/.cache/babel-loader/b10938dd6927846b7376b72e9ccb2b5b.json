{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devan\\\\OneDrive\\\\Desktop\\\\Project_Data_Website\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\n\nfunction setUserObject(user) {\n  if (!user) {\n    return null;\n  }\n\n  return {\n    username: user.username,\n    id: user.user_id,\n    first_name: user.first_name\n  };\n}\n\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const BASE_URL = \"http://127.0.0.1:8000/api/auth/login\";\n  const userToken = JSON.parse(localStorage.getItem(\"token\"));\n  const decodedUser = userToken ? jwtDecode(userToken) : null;\n  const [token, setToken] = useState(userToken);\n  const [user, setUser] = useState(setUserObject(decodedUser));\n  const [isServerError, setIsServerError] = useState(false);\n  const navigate = useNavigate();\n\n  const loginUser = async loginData => {\n    try {\n      let response = await axios.post(`${BASE_URL}/login/`, loginData);\n\n      if (response.status === 200) {\n        localStorage.setItem(\"token\", JSON.stringify(response.data.access));\n        setToken(JSON.parse(localStorage.getItem(\"token\")));\n        let loggedInUser = jwtDecode(response.data.access);\n        setUser(setUserObject(loggedInUser));\n        setIsServerError(false);\n        navigate(\"/login\");\n      } else {\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error.response.data);\n      setIsServerError(true);\n      navigate(\"/\");\n    }\n  };\n\n  const logoutUser = () => {\n    if (user) {\n      localStorage.removeItem(\"token\");\n      setUser(null);\n      setToken(null);\n      navigate(\"/login\");\n    }\n  };\n\n  const contextData = {\n    user,\n    token,\n    loginUser,\n    logoutUser,\n    isServerError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"lQHK4h+j5z+aJDaBw2Gdg10e2dI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Devan/OneDrive/Desktop/Project_Data_Website/frontend/src/context/AuthContext.js"],"names":["createContext","useState","useNavigate","axios","jwtDecode","AuthContext","setUserObject","user","username","id","user_id","first_name","AuthProvider","children","BASE_URL","userToken","JSON","parse","localStorage","getItem","decodedUser","token","setToken","setUser","isServerError","setIsServerError","navigate","loginUser","loginData","response","post","status","setItem","stringify","data","access","loggedInUser","error","console","log","logoutUser","removeItem","contextData"],"mappings":"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","sourcesContent":["import { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nfunction setUserObject(user) {\n  if (!user) {\n    return null;\n  }\n  return {\n    username: user.username,\n    id: user.user_id,\n    first_name: user.first_name,\n  };\n}\n\nexport const AuthProvider = ({ children }) => {\n  const BASE_URL = \"http://127.0.0.1:8000/api/auth/login\";\n  const userToken = JSON.parse(localStorage.getItem(\"token\"));\n  const decodedUser = userToken ? jwtDecode(userToken) : null;\n  const [token, setToken] = useState(userToken);\n  const [user, setUser] = useState(setUserObject(decodedUser));\n  const [isServerError, setIsServerError] = useState(false);\n  const navigate = useNavigate();\n\n  \n\n  const loginUser = async (loginData) => {\n    try {\n      let response = await axios.post(`${BASE_URL}/login/`, loginData);\n      if (response.status === 200) {\n        localStorage.setItem(\"token\", JSON.stringify(response.data.access));\n        setToken(JSON.parse(localStorage.getItem(\"token\")));\n        let loggedInUser = jwtDecode(response.data.access);\n        setUser(setUserObject(loggedInUser));\n        setIsServerError(false);\n        navigate(\"/login\");\n      } else {\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error.response.data);\n      setIsServerError(true);\n      navigate(\"/\");\n    }\n  };\n\n  const logoutUser = () => {\n    if (user) {\n      localStorage.removeItem(\"token\");\n      setUser(null);\n      setToken(null);\n      navigate(\"/login\");\n    }\n  };\n\n  const contextData = {\n    user,\n    token,\n    loginUser,\n    logoutUser,\n    isServerError,\n  };\n\n  return (\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}