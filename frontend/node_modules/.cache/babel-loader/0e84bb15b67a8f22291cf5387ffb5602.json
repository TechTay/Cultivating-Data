{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devan\\\\Downloads\\\\ReactDjango_JWT_StarterCode-main\\\\ReactDjango_JWT_StarterCode-main\\\\YouTube_Complete_Project\\\\frontend\\\\src\\\\pages\\\\VideoPage\\\\RelatedVideos.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./VideoPage.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RelatedVideos = () => {\n  _s();\n\n  // Use a prop here that will pull the videoId from the VideoPage parent\n  // In the \"return\", you will want to MAP the response you get back -> producing a thumbnail for each video\n  let hardCodedVideoId = \"XvEItH88zhg\";\n  const [rVideos, setRVideos] = useState([]);\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate.replace('/new-page');\n  };\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        let response = await axios.get(`https://www.googleapis.com/youtube/v3/search?relatedToVideoId=${hardCodedVideoId}&type=video&key=AIzaSyB7JFFdYJah4J-bbQIscizH68BUw1QCoD4&part=snippet`);\n        console.log(response.data.items);\n        setRVideos(response.data.items);\n      } catch (er) {\n        console.log(er);\n      }\n    };\n\n    fetchVideos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: rVideos.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"d-flex\",\n          style: {\n            padding: \".5em\",\n            \"\": \"1em\"\n          },\n          src: el.snippet.thumbnails.default.url,\n          width: \"200\",\n          height: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RelatedVideos, \"lTbFkHtpHwJIJvELW89E6gJ1CA8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RelatedVideos;\nexport default RelatedVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"RelatedVideos\");","map":{"version":3,"sources":["C:/Users/Devan/Downloads/ReactDjango_JWT_StarterCode-main/ReactDjango_JWT_StarterCode-main/YouTube_Complete_Project/frontend/src/pages/VideoPage/RelatedVideos.jsx"],"names":["React","useEffect","useState","axios","Link","useNavigate","RelatedVideos","hardCodedVideoId","rVideos","setRVideos","navigate","handleClick","replace","fetchVideos","response","get","console","log","data","items","er","map","el","padding","snippet","thumbnails","default","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,iBAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B;AACA;AAEA,MAAIC,gBAAgB,GAAG,aAAvB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMQ,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACE,OAAT,CAAiB,WAAjB;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAClB,iEAAgER,gBAAiB,sEAD/D,CAArB;AAGAS,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,KAA1B;AACAV,QAAAA,UAAU,CAACK,QAAQ,CAACI,IAAT,CAAcC,KAAf,CAAV;AACD,OAND,CAME,OAAOC,EAAP,EAAW;AACXJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACD;AACF,KAVD;;AAWAP,IAAAA,WAAW;AACZ,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGL,OAAO,CAACa,GAAR,CAAaC,EAAD,IAAQ;AACnB,0BAEI;AAAK,QAAA,OAAO,EAAEX,WAAd;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,QADZ;AAEE,UAAA,KAAK,EAAE;AAAEY,YAAAA,OAAO,EAAE,MAAX;AAAmB,gBAAI;AAAvB,WAFT;AAGE,UAAA,GAAG,EAAED,EAAE,CAACE,OAAH,CAAWC,UAAX,CAAsBC,OAAtB,CAA8BC,GAHrC;AAIE,UAAA,KAAK,EAAC,KAJR;AAKE,UAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAcD,KAfA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA/CD;;GAAMrB,a;UAMaD,W;;;KANbC,a;AAgDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./VideoPage.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst RelatedVideos = () => {\r\n  // Use a prop here that will pull the videoId from the VideoPage parent\r\n  // In the \"return\", you will want to MAP the response you get back -> producing a thumbnail for each video\r\n\r\n  let hardCodedVideoId = \"XvEItH88zhg\";\r\n  const [rVideos, setRVideos] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {\r\n    navigate.replace('/new-page');\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const fetchVideos = async () => {\r\n      try {\r\n        let response = await axios.get(\r\n          `https://www.googleapis.com/youtube/v3/search?relatedToVideoId=${hardCodedVideoId}&type=video&key=AIzaSyB7JFFdYJah4J-bbQIscizH68BUw1QCoD4&part=snippet`\r\n        );\r\n        console.log(response.data.items);\r\n        setRVideos(response.data.items);\r\n      } catch (er) {\r\n        console.log(er);\r\n      }\r\n    };\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {rVideos.map((el) => {\r\n        return (\r\n         \r\n            <div onClick={handleClick}>\r\n              <div class=\"col-6\"></div>\r\n              <img\r\n                className=\"d-flex\"\r\n                style={{ padding: \".5em\", \"\": \"1em\" }}\r\n                src={el.snippet.thumbnails.default.url}\r\n                width=\"200\"\r\n                height=\"150\"\r\n              />\r\n            </div>\r\n          \r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default RelatedVideos;\r\n"]},"metadata":{},"sourceType":"module"}