{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devan\\\\Downloads\\\\ReactDjango_JWT_StarterCode-main\\\\ReactDjango_JWT_StarterCode-main\\\\YouTube_Complete_Project\\\\frontend\\\\src\\\\pages\\\\VideoPage\\\\VideoPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CommentList from \"../../components/CommentList/CommentList\";\nimport RelatedVideos from \"./RelatedVideos\";\nimport CommentForm from \"../../components/CommentForm/CommentForm\";\nimport axios from \"axios\";\nimport useAuth from \"../../hooks/useAuth\";\nimport \"./VideoPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoPage = props => {\n  _s();\n\n  const [user, token] = useAuth();\n  const {\n    videoId\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const [video, setVideo] = useState({\n    snippet: {\n      title: \"\",\n      description: \"\"\n    }\n  });\n  const [replies, setReplies] = useState([{}]);\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        let response = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyB7JFFdYJah4J-bbQIscizH68BUw1QCoD4&part=snippet`);\n        console.log(response.data.items);\n        setVideo(response.data.items[0]);\n      } catch (er) {\n        console.log(er);\n      }\n    };\n\n    fetchVideos();\n  }, []); // const getReply = async () => {\n  //   let response = await axios.get(\n  //     `http://127.0.0.1:8000/api/replies/`,\n  //     {\n  //       headers: {\n  //         Authorization: \"Bearer \" + token,\n  //       },\n  //     }\n  //   );\n  //   setReplies(response.data);\n  //   console.log(response.data);\n  // };\n\n  useEffect(() => getComments(), []);\n\n  const getComments = async () => {\n    let response = await axios.get(`http://127.0.0.1:8000/api/comment/${videoId}/`, {\n      headers: {\n        Authorization: \"Bearer \" + token\n      }\n    });\n    setComments(response.data);\n    console.log(response.data);\n  };\n\n  useEffect(() => getComments(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      textAlign: \"center\",\n      padding: \"2em\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      id: \"ytplayer\",\n      type: \"text/html\",\n      title: \"title\",\n      width: \"640\",\n      height: \"360\",\n      src: `https://www.youtube.com/embed/${videoId}?autoplay=1&origin=http://example.com`,\n      frameborder: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: video.snippet.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: video.snippet.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      videoId: videoId,\n      getComments: getComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RelatedVideos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoPage, \"MomdcOaMmopklvQc0Uu2zy4vvwU=\", false, function () {\n  return [useAuth, useParams];\n});\n\n_c = VideoPage;\nexport default VideoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPage\");","map":{"version":3,"sources":["C:/Users/Devan/Downloads/ReactDjango_JWT_StarterCode-main/ReactDjango_JWT_StarterCode-main/YouTube_Complete_Project/frontend/src/pages/VideoPage/VideoPage.jsx"],"names":["React","useEffect","useState","useParams","CommentList","RelatedVideos","CommentForm","axios","useAuth","VideoPage","props","user","token","videoId","comments","setComments","video","setVideo","snippet","title","description","replies","setReplies","fetchVideos","response","get","console","log","data","items","er","getComments","headers","Authorization","textAlign","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CommentList from \"../../components/CommentList/CommentList\";\r\nimport RelatedVideos from \"./RelatedVideos\";\r\nimport CommentForm from \"../../components/CommentForm/CommentForm\";\r\nimport axios from \"axios\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport \"./VideoPage.css\"\r\n\r\nconst VideoPage = (props) => {\r\n  const [user, token] = useAuth();\r\n  const { videoId } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n  const [video, setVideo] = useState({\r\n    snippet: { title: \"\", description: \"\" },\r\n  });\r\n  const [replies, setReplies] = useState([{}]);\r\n  \r\n  useEffect(() => {\r\n    const fetchVideos = async () => {\r\n      try {\r\n        let response = await axios.get(\r\n          `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=AIzaSyB7JFFdYJah4J-bbQIscizH68BUw1QCoD4&part=snippet`\r\n        );\r\n        console.log(response.data.items);\r\n        setVideo(response.data.items[0]);\r\n      } catch (er) {\r\n        console.log(er);\r\n      }\r\n    };\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  // const getReply = async () => {\r\n  //   let response = await axios.get(\r\n  //     `http://127.0.0.1:8000/api/replies/`,\r\n  //     {\r\n  //       headers: {\r\n  //         Authorization: \"Bearer \" + token,\r\n  //       },\r\n  //     }\r\n  //   );\r\n  //   setReplies(response.data);\r\n  //   console.log(response.data);\r\n  // };\r\n  useEffect(() => getComments(), []);\r\n\r\n  const getComments = async () => {\r\n    let response = await axios.get(\r\n      `http://127.0.0.1:8000/api/comment/${videoId}/`,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n    setComments(response.data);\r\n    console.log(response.data);\r\n  };\r\n  useEffect(() => getComments(), []);\r\n  return (\r\n    <div className=\"container\" style={{ textAlign: \"center\", padding: \"2em\" }}>\r\n      <iframe\r\n        id=\"ytplayer\"\r\n        type=\"text/html\"\r\n        title=\"title\"\r\n        width=\"640\"\r\n        height=\"360\"\r\n        src={`https://www.youtube.com/embed/${videoId}?autoplay=1&origin=http://example.com`}\r\n        frameborder=\"0\"\r\n      ></iframe>\r\n      <div>{video.snippet.title}</div>\r\n      <div>{video.snippet.description}</div>\r\n\r\n      <CommentForm videoId={videoId} getComments={getComments} />\r\n      <CommentList comments={comments} />\r\n     \r\n      <div>\r\n        <RelatedVideos />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPage;\r\n"]},"metadata":{},"sourceType":"module"}