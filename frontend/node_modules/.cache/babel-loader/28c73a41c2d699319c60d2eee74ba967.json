{"ast":null,"code":"/*!\n  * Bootstrap base-component.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./dom/data.js'), require('./dom/event-handler.js'), require('./util/config.js'), require('./util/index.js')) : typeof define === 'function' && define.amd ? define(['./dom/data', './dom/event-handler', './util/config', './util/index'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.BaseComponent = factory(global.Data, global.EventHandler, global.Config, global.Index));\n})(this, function (Data, EventHandler, Config, index_js) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * Constants\n   */\n\n  const VERSION = '5.3.3';\n  /**\n   * Class definition\n   */\n\n  class BaseComponent extends Config {\n    constructor(element, config) {\n      super();\n      element = index_js.getElement(element);\n\n      if (!element) {\n        return;\n      }\n\n      this._element = element;\n      this._config = this._getConfig(config);\n      Data.set(this._element, this.constructor.DATA_KEY, this);\n    } // Public\n\n\n    dispose() {\n      Data.remove(this._element, this.constructor.DATA_KEY);\n      EventHandler.off(this._element, this.constructor.EVENT_KEY);\n\n      for (const propertyName of Object.getOwnPropertyNames(this)) {\n        this[propertyName] = null;\n      }\n    }\n\n    _queueCallback(callback, element) {\n      let isAnimated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      index_js.executeAfterTransition(callback, element, isAnimated);\n    }\n\n    _getConfig(config) {\n      config = this._mergeConfigObj(config, this._element);\n      config = this._configAfterMerge(config);\n\n      this._typeCheckConfig(config);\n\n      return config;\n    } // Static\n\n\n    static getInstance(element) {\n      return Data.get(index_js.getElement(element), this.DATA_KEY);\n    }\n\n    static getOrCreateInstance(element) {\n      let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n    }\n\n    static get VERSION() {\n      return VERSION;\n    }\n\n    static get DATA_KEY() {\n      return `bs.${this.NAME}`;\n    }\n\n    static get EVENT_KEY() {\n      return `.${this.DATA_KEY}`;\n    }\n\n    static eventName(name) {\n      return `${name}${this.EVENT_KEY}`;\n    }\n\n  }\n\n  return BaseComponent;\n});","map":{"version":3,"mappings":"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","names":["global","factory","exports","module","require","define","amd","globalThis","self","BaseComponent","Data","EventHandler","Config","Index","index_js","VERSION","constructor","element","config","getElement","_element","_config","_getConfig","set","DATA_KEY","dispose","remove","off","EVENT_KEY","propertyName","Object","getOwnPropertyNames","_queueCallback","callback","isAnimated","executeAfterTransition","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","getInstance","get","getOrCreateInstance","NAME","eventName","name"],"sources":["C:/Users/Devan/OneDrive/Desktop/Cultivating Data/frontend/node_modules/bootstrap/js/dist/base-component.js"],"sourcesContent":["/*!\n  * Bootstrap base-component.js v5.3.3 (https://getbootstrap.com/)\n  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('./dom/data.js'), require('./dom/event-handler.js'), require('./util/config.js'), require('./util/index.js')) :\n  typeof define === 'function' && define.amd ? define(['./dom/data', './dom/event-handler', './util/config', './util/index'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.BaseComponent = factory(global.Data, global.EventHandler, global.Config, global.Index));\n})(this, (function (Data, EventHandler, Config, index_js) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap base-component.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n\n  /**\n   * Constants\n   */\n\n  const VERSION = '5.3.3';\n\n  /**\n   * Class definition\n   */\n\n  class BaseComponent extends Config {\n    constructor(element, config) {\n      super();\n      element = index_js.getElement(element);\n      if (!element) {\n        return;\n      }\n      this._element = element;\n      this._config = this._getConfig(config);\n      Data.set(this._element, this.constructor.DATA_KEY, this);\n    }\n\n    // Public\n    dispose() {\n      Data.remove(this._element, this.constructor.DATA_KEY);\n      EventHandler.off(this._element, this.constructor.EVENT_KEY);\n      for (const propertyName of Object.getOwnPropertyNames(this)) {\n        this[propertyName] = null;\n      }\n    }\n    _queueCallback(callback, element, isAnimated = true) {\n      index_js.executeAfterTransition(callback, element, isAnimated);\n    }\n    _getConfig(config) {\n      config = this._mergeConfigObj(config, this._element);\n      config = this._configAfterMerge(config);\n      this._typeCheckConfig(config);\n      return config;\n    }\n\n    // Static\n    static getInstance(element) {\n      return Data.get(index_js.getElement(element), this.DATA_KEY);\n    }\n    static getOrCreateInstance(element, config = {}) {\n      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n    }\n    static get VERSION() {\n      return VERSION;\n    }\n    static get DATA_KEY() {\n      return `bs.${this.NAME}`;\n    }\n    static get EVENT_KEY() {\n      return `.${this.DATA_KEY}`;\n    }\n    static eventName(name) {\n      return `${name}${this.EVENT_KEY}`;\n    }\n  }\n\n  return BaseComponent;\n\n}));\n"]},"metadata":{},"sourceType":"script"}