{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devan\\\\OneDrive\\\\Desktop\\\\Project_Data_Website\\\\frontend\\\\src\\\\components\\\\NavBar\\\\NavBar.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavOptions = [{\n  name: 'Menu',\n  scroll: true,\n  backdrop: true\n}];\n\nfunction OffCanvasExample(_ref) {\n  _s();\n\n  let {\n    name,\n    ...props\n  } = _ref;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n}\n\n_s(OffCanvasExample, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = OffCanvasExample;\n\nfunction OffCanvasEx(_ref2) {\n  _s2();\n\n  let {\n    name,\n    ...props\n  } = _ref2;\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const toggleShow = () => setShow(s => !s);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: toggleShow,\n      className: \"me-2\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Cultivate Data Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(OffCanvasEx, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c2 = OffCanvasEx;\n\nfunction Example() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [NavOptions.map((props, idx) => /*#__PURE__*/_jsxDEV(OffCanvasEx, { ...props\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: ['end', 'top', 'bottom'].map((placement, idx) => /*#__PURE__*/_jsxDEV(OffCanvasExample, {\n        placement: placement,\n        name: placement\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this))\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_c3 = Example;\nexport default Example;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OffCanvasExample\");\n$RefreshReg$(_c2, \"OffCanvasEx\");\n$RefreshReg$(_c3, \"Example\");","map":{"version":3,"sources":["C:/Users/Devan/OneDrive/Desktop/Project_Data_Website/frontend/src/components/NavBar/NavBar.jsx"],"names":["useState","Button","Offcanvas","NavOptions","name","scroll","backdrop","OffCanvasExample","props","show","setShow","handleClose","handleShow","OffCanvasEx","toggleShow","s","Example","map","idx","placement"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,MAAMC,UAAU,GAAG,CAEjB;AACEC,EAAAA,IAAI,EAAE,MADR;AAEEC,EAAAA,MAAM,EAAE,IAFV;AAGEC,EAAAA,QAAQ,EAAE;AAHZ,CAFiB,CAAnB;;AAYA,SAASC,gBAAT,OAA8C;AAAA;;AAAA,MAApB;AAAEH,IAAAA,IAAF;AAAQ,OAAGI;AAAX,GAAoB;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMW,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;AACD;;GALQH,gB;;KAAAA,gB;;AAOT,SAASM,WAAT,QAA0C;AAAA;;AAAA,MAApB;AAAET,IAAAA,IAAF;AAAQ,OAAGI;AAAX,GAAoB;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMW,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMI,UAAU,GAAG,MAAMJ,OAAO,CAAEK,CAAD,IAAO,CAACA,CAAT,CAAhC;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAED,UAAnC;AAA+C,MAAA,SAAS,EAAC,MAAzD;AAAA,gBACGV;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEK,IAAjB;AAAuB,MAAA,MAAM,EAAEE,WAA/B;AAAA,SAAgDH,KAAhD;AAAA,8BACE,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,WAAW,MAA7B;AAAA,+BACE,QAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAgBD;;IAtBQK,W;;MAAAA,W;;AAwBT,SAASG,OAAT,GAAmB;AACjB,sBACE;AAAA,eACGb,UAAU,CAACc,GAAX,CAAe,CAACT,KAAD,EAAQU,GAAR,kBACd,QAAC,WAAD,OAA2BV;AAA3B,OAAkBU,GAAlB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAIE;AAAA,gBACC,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,EAAyBD,GAAzB,CAA6B,CAACE,SAAD,EAAYD,GAAZ,kBAC5B,QAAC,gBAAD;AAA4B,QAAA,SAAS,EAAEC,SAAvC;AAAkD,QAAA,IAAI,EAAEA;AAAxD,SAAuBD,GAAvB;AAAA;AAAA;AAAA;AAAA,cADD;AADD,qBAJF;AAAA,kBADF;AAaD;;MAdQF,O;AAiBT,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\n\nconst NavOptions = [\n  \n  {\n    name: 'Menu',\n    scroll: true,\n    backdrop: true,\n  },\n\n  \n\n];\n\nfunction OffCanvasExample({ name, ...props }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n}\n\nfunction OffCanvasEx ({ name, ...props }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const toggleShow = () => setShow((s) => !s);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={toggleShow} className=\"me-2\">\n        {name}\n      </Button>\n      <Offcanvas show={show} onHide={handleClose} {...props}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Cultivate Data Group</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Some text as placeholder. In real life you can have the elements you\n          have chosen. Like, text, images, lists, etc.\n        </Offcanvas.Body>\n      </Offcanvas>\n    </>\n  );\n}\n\nfunction Example() {\n  return (\n    <>\n      {NavOptions.map((props, idx) => (\n        <OffCanvasEx key={idx} {...props} />\n      ))}\n      <>\n      {['end', 'top', 'bottom'].map((placement, idx) => (\n        <OffCanvasExample key={idx} placement={placement} name={placement} />\n      ))}\n    </>\n    </>\n    \n  );\n}\n\n\nexport default Example;\n"]},"metadata":{},"sourceType":"module"}