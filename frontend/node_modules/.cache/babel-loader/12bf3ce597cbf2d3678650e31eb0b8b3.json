{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devan\\\\Downloads\\\\ReactDjango_JWT_StarterCode-main\\\\ReactDjango_JWT_StarterCode-main\\\\YouTube_Complete_Project\\\\frontend\\\\src\\\\pages\\\\VideoPage\\\\RelatedVideos.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RelatedVideos = () => {\n  _s();\n\n  // Use a prop here that will pull the videoId from the VideoPage parent\n  // In the \"return\", you will want to MAP the response you get back -> producing a thumbnail for each video\n  let hardCodedVideoId = \"XvEItH88zhg\";\n  const [rVideos, setRVideos] = useState([]);\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        let response = await axios.get(`https://www.googleapis.com/youtube/v3/search?relatedToVideoId=${hardCodedVideoId}&type=video&key=AIzaSyB7JFFdYJah4J-bbQIscizH68BUw1QCoD4&part=snippet`);\n        console.log(response.data.items);\n        setRVideos(response.data.items);\n      } catch (er) {\n        console.log(er);\n      }\n    };\n\n    fetchVideos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rVideos.map(el => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `${el.id.videoId}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"d-flex\",\n            style: {\n              'padding': '.5em',\n              '': '1em'\n            },\n            src: el.snippet.thumbnails.default.url,\n            width: \"200\",\n            height: \"150\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }, this);\n};\n\n_s(RelatedVideos, \"lmKXmsTl1LeoWIFTahH3rawH1sk=\");\n\n_c = RelatedVideos;\nexport default RelatedVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"RelatedVideos\");","map":{"version":3,"sources":["C:/Users/Devan/Downloads/ReactDjango_JWT_StarterCode-main/ReactDjango_JWT_StarterCode-main/YouTube_Complete_Project/frontend/src/pages/VideoPage/RelatedVideos.jsx"],"names":["React","useEffect","useState","axios","Link","RelatedVideos","hardCodedVideoId","rVideos","setRVideos","fetchVideos","response","get","console","log","data","items","er","map","el","id","videoId","snippet","thumbnails","default","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,WAAP;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB;AACA;AAEA,MAAIC,gBAAgB,GAAG,aAAvB;AACC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAClB,iEAAgEL,gBAAiB,sEAD/D,CAArB;AAGAM,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,KAA1B;AACDP,QAAAA,UAAU,CAACE,QAAQ,CAACI,IAAT,CAAcC,KAAf,CAAV;AACA,OAND,CAME,OAAOC,EAAP,EAAW;AACXJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACL;AACE,KAVD;;AAWAP,IAAAA,WAAW;AACZ,GAbS,EAaP,EAbO,CAAT;AAiBD,sBACG;AAAA,cACKF,OAAO,CAACU,GAAR,CAAaC,EAAD,IAAQ;AACxB,0BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,GAAEA,EAAE,CAACC,EAAH,CAAMC,OAAQ,EAA3B;AAAA,+BACE;AAAA,kCACA;AAAK,YAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAK,YAAA,SAAS,EAAC,QAAf;AAAwB,YAAA,KAAK,EAAE;AAAC,yBAAW,MAAZ;AAAoB,kBAAI;AAAxB,aAA/B;AAAgE,YAAA,GAAG,EAAEF,EAAE,CAACG,OAAH,CAAWC,UAAX,CAAsBC,OAAtB,CAA8BC,GAAnG;AAAwG,YAAA,KAAK,EAAC,KAA9G;AAAoH,YAAA,MAAM,EAAE;AAA5H;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AASI,KAVA;AADL;AAAA;AAAA;AAAA;AAAA,UADH;AAgBH,CAxCD;;GAAMnB,a;;KAAAA,a;AAyCN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./app.css\"\r\n\r\n\r\nconst RelatedVideos = () => {\r\n    // Use a prop here that will pull the videoId from the VideoPage parent\r\n    // In the \"return\", you will want to MAP the response you get back -> producing a thumbnail for each video\r\n  \r\n    let hardCodedVideoId = \"XvEItH88zhg\"\r\n     const [rVideos, setRVideos] = useState([]);\r\n    \r\n     useEffect(() => {\r\n      const fetchVideos = async () => {\r\n        try {\r\n          let response = await axios.get(\r\n            `https://www.googleapis.com/youtube/v3/search?relatedToVideoId=${hardCodedVideoId}&type=video&key=AIzaSyB7JFFdYJah4J-bbQIscizH68BUw1QCoD4&part=snippet`,\r\n          )\r\n          console.log(response.data.items)\r\n         setRVideos(response.data.items)\r\n        } catch (er) {\r\n          console.log(er);\r\n    }\r\n      };\r\n      fetchVideos();\r\n    }, []);\r\n        \r\n\r\n \r\n    return (\r\n       <div>\r\n           {rVideos.map((el) => {\r\n        return (\r\n          <Link to={`${el.id.videoId}`}>\r\n            <div>\r\n            <div class=\"col-6\"></div>\r\n            <img className='d-flex' style={{'padding': '.5em', '': '1em'}}  src={el.snippet.thumbnails.default.url} width='200' height= '150'/>\r\n            </div>\r\n           \r\n          </Link>\r\n        );\r\n           })}\r\n          </div>\r\n    )\r\n\r\n}\r\nexport default RelatedVideos"]},"metadata":{},"sourceType":"module"}