{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devan\\\\OneDrive\\\\Desktop\\\\Cultivating Data\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport useCustomForm from \"../hooks/useCustomForm\"; // LoginPage.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const {\n    loginUser,\n    isServerError\n  } = useContext(AuthContext);\n  const defaultValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleLogin = async formData => {\n    try {\n      // Call the loginUser function from AuthContext\n      await loginUser(formData); // If login is successful, clear error message and form data\n\n      setErrorMessage(\"\");\n      reset();\n    } catch (error) {\n      // If login fails, display error message and clear password field\n      setErrorMessage(\"Incorrect username or password.\");\n      setFormValues({ ...formData,\n        password: \"\"\n      });\n    }\n  };\n\n  const [formData, handleInputChange, handleSubmit, reset, setFormValues] = useCustomForm(handleLogin, defaultValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container bg-light min-vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-5 py-4\",\n      children: \"Welcome to Project Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isServerError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Incorrect username or password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleInputChange,\n          autoComplete: \"current-username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"B3y2zwqvjWnJaCI2IPYLATJShac=\", false, function () {\n  return [useCustomForm];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/Devan/OneDrive/Desktop/Cultivating Data/frontend/src/pages/LoginPage.js"],"names":["React","useContext","useState","AuthContext","useCustomForm","LoginPage","loginUser","isServerError","defaultValues","username","password","errorMessage","setErrorMessage","handleLogin","formData","reset","error","setFormValues","handleInputChange","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B,C,CAIA;;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA+BN,UAAU,CAACE,WAAD,CAA/C;AACA,QAAMK,aAAa,GAAG;AAAEC,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAAtB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMW,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtC,QAAI;AACF;AACA,YAAMR,SAAS,CAACQ,QAAD,CAAf,CAFE,CAGF;;AACAF,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAG,MAAAA,KAAK;AAEN,KAPD,CAOE,OAAOC,KAAP,EAAc;AACd;AACAJ,MAAAA,eAAe,CAAC,iCAAD,CAAf;AACAK,MAAAA,aAAa,CAAC,EAAE,GAAGH,QAAL;AAAeJ,QAAAA,QAAQ,EAAE;AAAzB,OAAD,CAAb;AACD;AACF,GAbD;;AAeA,QAAM,CAACI,QAAD,EAAWI,iBAAX,EAA8BC,YAA9B,EAA4CJ,KAA5C,EAAmDE,aAAnD,IAAoEb,aAAa,CACtFS,WADsF,EAErFL,aAFqF,CAAvF;AAOA,sBAEE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,aAAa,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFpB,EAGGI,YAAY,iBAAI;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAHnB,eAIE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEQ,YAAjC;AAAA,8BACE;AAAA,6CAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAEL,QAAQ,CAACL,QAHlB;AAIE,UAAA,QAAQ,EAAES,iBAJZ;AAKE,UAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,6CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAEJ,QAAQ,CAACJ,QAHlB;AAIE,UAAA,QAAQ,EAAEQ,iBAJZ;AAKE,UAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA+BD,CA5DD;;GAAMb,S;UAsBsED,a;;;KAtBtEC,S;AA8DN,eAAeA,SAAf","sourcesContent":["import React, { useContext, useState} from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport useCustomForm from \"../hooks/useCustomForm\";\n\n\n\n// LoginPage.js\n\n\nconst LoginPage = () => {\n\n  const { loginUser, isServerError } = useContext(AuthContext);\n  const defaultValues = { username: \"\", password: \"\" };\n  const [errorMessage, setErrorMessage] = useState(\"\");\n \n  \n  const handleLogin = async (formData) => {\n    try {\n      // Call the loginUser function from AuthContext\n      await loginUser(formData);\n      // If login is successful, clear error message and form data\n      setErrorMessage(\"\");\n      reset();\n\n    } catch (error) {\n      // If login fails, display error message and clear password field\n      setErrorMessage(\"Incorrect username or password.\");\n      setFormValues({ ...formData, password: \"\" });\n    }\n  };\n  \n  const [formData, handleInputChange, handleSubmit, reset, setFormValues] = useCustomForm(\n   handleLogin, \n    defaultValues\n    \n  );\n  \n\n  return (\n    \n    <div className=\"container bg-light min-vh-100\">\n      <h3 className=\"mt-5 py-4\">Welcome to Project Data</h3>\n      {isServerError && <p>Incorrect username or password.</p>}\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleInputChange}\n            autoComplete=\"current-username\"\n          />\n        </label>\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleInputChange}\n            autoComplete=\"current-password\"\n          />\n        </label>\n        <button type=\"submit\">Login!</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginPage;\n\n"]},"metadata":{},"sourceType":"module"}