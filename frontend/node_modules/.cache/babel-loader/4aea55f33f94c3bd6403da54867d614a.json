{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devan\\\\Downloads\\\\ReactDjango_JWT_StarterCode-main\\\\ReactDjango_JWT_StarterCode-main\\\\YouTube_Complete_Project\\\\frontend\\\\src\\\\pages\\\\VideoPage\\\\RelatedVideos.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./VideoPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RelatedVideos = _ref => {\n  _s();\n\n  let {\n    videoId,\n    setVideo_ID\n  } = _ref;\n  // Use a prop here that will pull the videoId from the VideoPage parent\n  // In the \"return\", you will want to MAP the response you get back -> producing a thumbnail for each video\n  const [rVideos, setRVideos] = useState([]);\n\n  const handleClick = id => {\n    setVideo_ID(id);\n  };\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        let response = await axios.get(`https://www.googleapis.com/youtube/v3/search?relatedToVideoId=${videoId}&type=video&key=AIzaSyB7JFFdYJah4J-bbQIscizH68BUw1QCoD4&part=snippet`);\n        console.log(response.data.items);\n        setRVideos(response.data.items);\n      } catch (er) {\n        console.log(er);\n      }\n    };\n\n    fetchVideos();\n  }, [videoId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: rVideos.map(el => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => handleClick(el.id.videoId),\n          className: \"d-flex\",\n          style: {\n            padding: \".5em\",\n            \"\": \"1em\"\n          },\n          src: el.snippet.thumbnails.default.url,\n          width: \"200\",\n          height: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, el.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RelatedVideos, \"lmKXmsTl1LeoWIFTahH3rawH1sk=\");\n\n_c = RelatedVideos;\nexport default RelatedVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"RelatedVideos\");","map":{"version":3,"sources":["C:/Users/Devan/Downloads/ReactDjango_JWT_StarterCode-main/ReactDjango_JWT_StarterCode-main/YouTube_Complete_Project/frontend/src/pages/VideoPage/RelatedVideos.jsx"],"names":["React","useEffect","useState","axios","RelatedVideos","videoId","setVideo_ID","rVideos","setRVideos","handleClick","id","fetchVideos","response","get","console","log","data","items","er","map","el","padding","snippet","thumbnails","default","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,aAAa,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAA6B;AAClD;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,WAAW,GAAIC,EAAD,IAAQ;AAC1BJ,IAAAA,WAAW,CAACI,EAAD,CAAX;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAClB,iEAAgER,OAAQ,sEADtD,CAArB;AAGAS,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,KAA1B;AACAT,QAAAA,UAAU,CAACI,QAAQ,CAACI,IAAT,CAAcC,KAAf,CAAV;AACD,OAND,CAME,OAAOC,EAAP,EAAW;AACXJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ;AACD;AACF,KAVD;;AAWAP,IAAAA,WAAW;AACZ,GAbQ,EAaN,CAACN,OAAD,CAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,cACGE,OAAO,CAACY,GAAR,CAAaC,EAAD,IAAQ;AACnB,0BACE;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,OAAO,EAAE,MAAMX,WAAW,CAACW,EAAE,CAACV,EAAH,CAAML,OAAP,CAD5B;AAEE,UAAA,SAAS,EAAC,QAFZ;AAGE,UAAA,KAAK,EAAE;AAAEgB,YAAAA,OAAO,EAAE,MAAX;AAAmB,gBAAI;AAAvB,WAHT;AAIE,UAAA,GAAG,EAAED,EAAE,CAACE,OAAH,CAAWC,UAAX,CAAsBC,OAAtB,CAA8BC,GAJrC;AAKE,UAAA,KAAK,EAAC,KALR;AAME,UAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUL,EAAE,CAACV,EAAH,CAAML,OAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAdA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA5CD;;GAAMD,a;;KAAAA,a;AA6CN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./VideoPage.css\";\r\n\r\nconst RelatedVideos = ({ videoId, setVideo_ID }) => {\r\n  // Use a prop here that will pull the videoId from the VideoPage parent\r\n  // In the \"return\", you will want to MAP the response you get back -> producing a thumbnail for each video\r\n\r\n  const [rVideos, setRVideos] = useState([]);\r\n\r\n  const handleClick = (id) => {\r\n    setVideo_ID(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchVideos = async () => {\r\n      try {\r\n        let response = await axios.get(\r\n          `https://www.googleapis.com/youtube/v3/search?relatedToVideoId=${videoId}&type=video&key=AIzaSyB7JFFdYJah4J-bbQIscizH68BUw1QCoD4&part=snippet`\r\n        );\r\n        console.log(response.data.items);\r\n        setRVideos(response.data.items);\r\n      } catch (er) {\r\n        console.log(er);\r\n      }\r\n    };\r\n    fetchVideos();\r\n  }, [videoId]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {rVideos.map((el) => {\r\n        return (\r\n          <div key={el.id.videoId}>\r\n            <div class=\"col-6\"></div>\r\n            <img\r\n              onClick={() => handleClick(el.id.videoId)}\r\n              className=\"d-flex\"\r\n              style={{ padding: \".5em\", \"\": \"1em\" }}\r\n              src={el.snippet.thumbnails.default.url}\r\n              width=\"200\"\r\n              height=\"150\"\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default RelatedVideos;\r\n"]},"metadata":{},"sourceType":"module"}